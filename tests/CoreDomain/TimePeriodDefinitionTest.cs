using System;
using Xunit; 

using Lockbase.CoreDomain.ValueObjects; 

namespace Lockbase.ui.UnitTest.CoreDomain {

	public class TimePeriodDefinitionTest {

	/*
	
	20190211T080000Z/28800/DW(Mo,Tu,We,Th,Fr)/20190329T160000Z,20190401T070000Z/28800/DW(Mo,Tu,We,Th,Fr)/20191025T150000Z,20191028T080000Z/28800/DW(Mo,Tu,We,Th,Fr)/20200210T160000Z
	20190211T070000Z/28800/DW(Mo,Tu,We,Th,Fr)/20190329T150000Z,20190401T060000Z/28800/DW(Mo,Tu,We,Th,Fr)/20191025T140000Z,20191028T070000Z/28800/DW(Mo,Tu,We,Th,Fr)/20200211T150000Z
	20190211T050000Z/54000/DW/20190330T200000Z,20190331T040000Z/54000/DW/20191026T190000Z,20191027T050000Z/54000/DW/20200211T200000Z
	20181231T230000Z/63072000
	20190211T200000Z/32400/DW/20190330T050000Z,20190330T200000Z/28800,20190331T190000Z/32400/DW/20191026T040000Z,20191026T190000Z/36000,20191027T200000Z/32400/DW/20200211T050000Z
	 */

		[Fact]
		public void TimePeriodDefinitionAssignment() {
			TimePeriodDefinition definition = "20190211T080000Z/28800/DW(Mo,Tu,We,Th,Fr)/20190329T160000Z";
			
			Assert.Equal(28800, definition.Duration); 
			Assert.Equal(new DateTime(2019,02,11,8,0,0), definition.StartTime);
			Assert.Equal(new DateTime(2019,03,29,16,0,0), definition.EndTime);
		}

	}
}
